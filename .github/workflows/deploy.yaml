name: Deploy to Amazon EKS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
      AWS_ECR_URI: ${{ secrets.AWS_ECR_URI }}
      IMAGE_TAG: ${{ github.sha }}
      DATABASE_URL: 'postgresql://<username>:<password>@localhost:5432/<dbname>?schema=public'
      BASTION_SSH_KEY: ${{ secrets.BASTION_SSH_KEY }}
      BASTION_HOST: ${{ secrets.BASTION_HOST }}
      BASTION_USER: ${{ secrets.BASTION_USER }}
      RDS_HOST: ${{ secrets.RDS_HOST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create SSH key file
        run: |
          echo "${{ secrets.BASTION_SSH_KEY }}" > bastion_key.pem
          chmod 600 bastion_key.pem

      - name: Create SSH tunnel to Bastion
        run: |
          ssh -o StrictHostKeyChecking=no -i bastion_key.pem -L 5432:$RDS_HOST:5432 $BASTION_USER@$BASTION_HOST -N &

      - name: Wait for SSH tunnel
        run: sleep 10

      - name: Test DB connection through tunnel
        run: |
          nc -zv localhost 5432

      - name: Install dependencies
        run: npm install

      - name: Generate types from new Prisma schema
        run: npx prisma generate

      - name: Apply Prisma migrations
        run: npx prisma migrate deploy

      - name: Run lint
        run: npm run lint

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t $AWS_ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $AWS_ECR_REPOSITORY:$IMAGE_TAG $AWS_ECR_URI:$IMAGE_TAG
          docker push $AWS_ECR_URI:$IMAGE_TAG

      - name: Run unit tests
        run: npm run test

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/nest-app nest-app=$AWS_ECR_URI:$IMAGE_TAG
          kubectl rollout status deployment/nest-app

      - name: Verify deployment
        run: kubectl get pods
